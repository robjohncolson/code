name: Deploy to Railway

on:
  push:
    branches:
      - main
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - staging
          - production

env:
  RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

jobs:
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: staging
      url: https://apstats-staging.railway.app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway Staging
        run: |
          railway link ${{ secrets.RAILWAY_PROJECT_ID }} --environment staging
          railway up --detach
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Wait for deployment
        run: sleep 30

      - name: Health check
        run: |
          MAX_RETRIES=10
          RETRY_INTERVAL=10

          for i in $(seq 1 $MAX_RETRIES); do
            echo "Health check attempt $i/$MAX_RETRIES"

            if curl -f https://apstats-staging.railway.app/health; then
              echo "‚úÖ Health check passed"
              exit 0
            fi

            if [ $i -lt $MAX_RETRIES ]; then
              echo "Retrying in ${RETRY_INTERVAL}s..."
              sleep $RETRY_INTERVAL
            fi
          done

          echo "‚ùå Health check failed after $MAX_RETRIES attempts"
          exit 1

      - name: Post deployment notification
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}';
            const emoji = status === 'success' ? '‚úÖ' : '‚ùå';

            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `${emoji} Staging deployment ${status}\n\nURL: https://apstats-staging.railway.app`
            });

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    environment:
      name: production
      url: https://apstats.railway.app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Run tests before production deploy
        run: |
          npm ci
          npm run test:all

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway Production
        run: |
          railway link ${{ secrets.RAILWAY_PROJECT_ID }} --environment production
          railway up --detach
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

      - name: Wait for deployment
        run: sleep 60

      - name: Health check
        run: |
          MAX_RETRIES=15
          RETRY_INTERVAL=10

          for i in $(seq 1 $MAX_RETRIES); do
            echo "Health check attempt $i/$MAX_RETRIES"

            if curl -f https://apstats.railway.app/health; then
              echo "‚úÖ Production health check passed"
              exit 0
            fi

            if [ $i -lt $MAX_RETRIES ]; then
              echo "Retrying in ${RETRY_INTERVAL}s..."
              sleep $RETRY_INTERVAL
            fi
          done

          echo "‚ùå Production health check failed after $MAX_RETRIES attempts"
          echo "üîÑ Consider rolling back the deployment"
          exit 1

      - name: Create deployment tag
        if: success()
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a "deploy-$(date +%Y%m%d-%H%M%S)" -m "Production deployment from ${{ github.sha }}"
          git push origin --tags

      - name: Notify on success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: '‚úÖ Production deployment successful\n\nURL: https://apstats.railway.app'
            });

      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: '‚ùå Production deployment failed\n\nCheck the workflow logs and consider rolling back.'
            });
